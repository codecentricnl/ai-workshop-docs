"use strict";(self.webpackChunkai_workshop_docs=self.webpackChunkai_workshop_docs||[]).push([[828],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),h=l(n),u=r,m=h["".concat(p,".").concat(u)]||h[u]||s[u]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8345:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3},i="Opdracht 3: FastAPI Application",d={unversionedId:"python/opdracht3",id:"python/opdracht3",title:"Opdracht 3: FastAPI Application",description:"In deze opdracht gaan we aan de hand van FastAPI de Bookstore API opzetten. FastAPI is een moderne, snelle",source:"@site/docs/python/5.opdracht3.md",sourceDirName:"python",slug:"/python/opdracht3",permalink:"/ai-workshop-docs/docs/python/opdracht3",draft:!1,editUrl:"https://github.com/codecentricnl/ai-workshop-docs/docs/python/5.opdracht3.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"pythonSidebar",previous:{title:"Opdracht 2: Bookstore",permalink:"/ai-workshop-docs/docs/python/opdracht2"}},p={},l=[{value:"Opdracht 3.1",id:"opdracht-31",level:2},{value:"Opdracht 3.2",id:"opdracht-32",level:2},{value:"Opdracht 3.3",id:"opdracht-33",level:2}],c={toc:l};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"opdracht-3-fastapi-application"},"Opdracht 3: FastAPI Application"),(0,r.kt)("p",null,"In deze opdracht gaan we aan de hand van FastAPI de Bookstore API opzetten. FastAPI is een moderne, snelle\n(high-performance) web framework voor het bouwen van API's met Python 3.7+.\nFastAPI maakt gebruik van de nieuwste async en await-sleutelwoorden, wat het een asynchroon framework maakt, waardoor\nhoge prestaties en gelijktijdigheid mogelijk zijn, terwijl het toch gemakkelijk te lezen en te onderhouden is. Het biedt\nook uitstekende ondersteuning voor moderne Python-functies zoals type annotaties, die de code leesbaarder en\nonderhoudbaarder maken."),(0,r.kt)("h2",{id:"opdracht-31"},"Opdracht 3.1"),(0,r.kt)("p",null,"Maak een derde project aan, gebruik zoals in opdracht 1 en 2 ook een standaard Python project."),(0,r.kt)("h2",{id:"opdracht-32"},"Opdracht 3.2"),(0,r.kt)("p",null,"Vraag aan ChatGPT of deze een FastAPI applicatie kan ontwikkelen aan de hand van de feature file die in opdracht 2 is\ngegenereerd.\nIn de gegenereerde code zal je een klasse te zien krijgen genaamd ",(0,r.kt)("inlineCode",{parentName:"p"},"Book"),", met als argument ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseModel"),". Wanneer je een\nnieuw gegevensmodel maakt in Pydantic, kun je een klasse defini\xebren die is afgeleid van BaseModel.\nDit geeft het model de mogelijkheid om automatisch de structuur van het model te valideren en de juiste\ngegevenstypes toe te passen op de velden van het model."),(0,r.kt)("p",null,"Maak een bestand aan in je project genaamd ",(0,r.kt)("inlineCode",{parentName:"p"},"main.py")," en plaats je code hier in."),(0,r.kt)("p",null,"Als alles volgens plan verloopt, zou je nu een FastAPI applicatie moeten hebben. Om de API nu op te starten,\nga in je terminal naar de folder waar de ",(0,r.kt)("inlineCode",{parentName:"p"},"main.py")," staat en voer je het commando ",(0,r.kt)("inlineCode",{parentName:"p"},"uvicorn main:app --reload")," uit."),(0,r.kt)("p",null,"Om te checken of de API draait, kan je in je browser naar ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1:8000/books"),", in het geval dat Chat-GPT een andere\npad heeft gegenereerd voor het ophalen van de boeken, gebruik dat pad dan."),(0,r.kt)("h2",{id:"opdracht-33"},"Opdracht 3.3"),(0,r.kt)("p",null,"Tot slot kan je de test van opdracht 2 proberen uit te voeren door ",(0,r.kt)("inlineCode",{parentName:"p"},"behave")," uit te voeren in de terminal\nin de folder van opdracht 2."))}s.isMDXComponent=!0}}]);